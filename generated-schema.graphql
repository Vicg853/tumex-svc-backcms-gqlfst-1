# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input MutateObjectivesArgsData {
  """The project's image."""
  image: String

  """
  Project description in three languages: English, French, and Brazilian Portuguese.
  """
  projectDescription: ProjectTextLocalesCreateInput

  """Project's end date. If not set, then project it is still ongoing."""
  projectEndDate: DateTime

  """
  Project name in three languages: English, French, and Brazilian Portuguese.
  """
  projectName: ProjectTextLocalesCreateInput

  """The scopes for this project"""
  projectScope: ProjectScopes

  """Project's start date"""
  projectStartDate: DateTime

  """
  Project's sources. Contains a link to the source and its type: website, github, more-info, related and custom.
  """
  sources: [ProjectSourceCreateInput!]

  """Project's tech stack"""
  techStack: [TechStackCreateInput!]

  """Project's topics"""
  topics: [String!]
}

type Mutation {
  createObjective(data: ObjectivesCreateInput!): Objectives!
  createProject(
    """The project's image."""
    image: String

    """
    Project description in three languages: English, French, and Brazilian Portuguese.
    """
    projectDescription: ProjectTextLocalesCreateInput

    """Project's end date. If not set, then project it is still ongoing."""
    projectEndDate: DateTime

    """
    Project name in three languages: English, French, and Brazilian Portuguese.
    """
    projectName: ProjectTextLocalesCreateInput

    """The scopes for this project"""
    projectScope: ProjectScopes

    """Project's start date"""
    projectStartDate: DateTime

    """
    Project's sources. Contains a link to the source and its type: website, github, more-info, related and custom.
    """
    sources: [ProjectSourceCreateInput!]

    """Project's tech stack"""
    techStack: [TechStackCreateInput!]

    """Project's topics"""
    topics: [String!]
  ): Project!
  deleteObjective(id: String!): Objectives
  deleteProject(
    """The project to be delete ID's."""
    id: String!
  ): Project
  modifyObjective(data: UpdateObjectivesArgsData!, id: String!): Objectives
  updateProject(
    """The project's update data."""
    data: MutateObjectivesArgsData!

    """The project's ID."""
    id: String!
  ): Project
}

enum ObjectiveProgress {
  DONE
  INPROGRESS
  TODO
}

type Objectives {
  createdAt: DateTime!
  id: String!
  objectiveDescription: JSON!
  objectiveName: JSON
  objectiveProgress: ObjectiveProgress!
  objectiveSource: String
}

input ObjectivesCreateInput {
  createdAt: DateTime
  id: String
  objectiveDescription: JSON!
  objectiveName: JSON
  objectiveProgress: ObjectiveProgress
  objectiveSource: String
}

type Project {
  addedAt: DateTime!
  id: String!
  image: String!
  isArchived: Boolean!
  projectDescription: ProjectTextLocales!
  projectEndDate: DateTime
  projectName: ProjectTextLocales!
  projectScope: ProjectScopes
  projectStartDate: DateTime!
  sources: [ProjectSource!]!
  techStack: [TechStack!]!
  topics: [String!]!
}

type ProjectFormatted {
  """Project's front matter"""
  frontmatter: ProjectFrontMatter!

  """Project's metadata"""
  metadata: [ProjectMetadata!]!

  """Project's sources"""
  sources: ProjectSource!
}

type ProjectFrontMatter {
  """The project's main illustration image."""
  image: String!

  """
  Project description in three languages: English, French, and Brazilian Portuguese.
  """
  projectDescription: ProjectTextLocales!

  """
  Project name in three languages: English, French, and Brazilian Portuguese.
  """
  projectName: ProjectTextLocales!
}

type ProjectMetadata {
  """Project's end date. If not set, then project it is still ongoing."""
  endDate: DateTime

  """This project's scopes"""
  scopes: ProjectScopes

  """Project's start date"""
  startDate: DateTime!

  """Project's tech stack"""
  techStack: [TechStack!]!

  """Project's topics"""
  topics: [String!]!
}

enum ProjectScopes {
  NONPROFIT
  OPENSOURCE
  PERSONAL
  PROFESSIONAL
}

type ProjectSource {
  sourceLink: String!
  sourceType: SourceTypes!
}

input ProjectSourceCreateInput {
  sourceLink: String!
  sourceType: SourceTypes!
}

type ProjectTextLocales {
  en: String!
  fr: String
  pt: String
}

input ProjectTextLocalesCreateInput {
  en: String!
  fr: String
  pt: String
}

type Query {
  getAllObjectives: [Objectives!]
  getAllProjects: ProjectFormatted
}

enum SourceTypes {
  CUSTOM
  GITHUB
  MOREINFO
  RELATED
  WEBSITE
}

type TechStack {
  techLink: String
  techName: String!
}

input TechStackCreateInput {
  techLink: String
  techName: String!
}

input UpdateObjectivesArgsData {
  objectiveDescription: JSON
  objectiveName: JSON
  objectiveProgress: ObjectiveProgress
  objectiveSource: String
}
